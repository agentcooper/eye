SourceFile
├─ FunctionDeclaration(makeCounter)
│  ├─ returnType: FunctionType
│  │              └─ returnType: TypeReference
│  │                             └─ Identifier(i64)
│  └─ Block
│     ├─ LetStatement(counter)
│     │  ├─ type: Null
│     │  └─ expression: NumericLiteral(1)
│     ├─ LetStatement(inc)
│     │  ├─ type: Null
│     │  └─ expression: ArrowFunction
│     │                 ├─ returnType: TypeReference
│     │                 │              └─ Identifier(i64)
│     │                 └─ Block
│     │                    ├─ ExpressionStatement
│     │                    │  └─ expression: BinaryExpression(Equals)
│     │                    │                 ├─ lhs: Identifier(counter)
│     │                    │                 └─ rhs: BinaryExpression(Plus)
│     │                    │                         ├─ lhs: Identifier(counter)
│     │                    │                         └─ rhs: NumericLiteral(1)
│     │                    └─ ReturnStatement
│     │                       └─ expression: Identifier(counter)
│     └─ ReturnStatement
│        └─ expression: Identifier(inc)
└─ FunctionDeclaration(main)
   ├─ returnType: TypeReference
   │              └─ Identifier(i64)
   └─ Block
      ├─ LetStatement(x)
      │  ├─ type: Null
      │  └─ expression: CallExpression(makeCounter)
      ├─ ExpressionStatement
      │  └─ expression: CallExpression(print)
      │                 └─ CallExpression(x)
      ├─ ExpressionStatement
      │  └─ expression: CallExpression(print)
      │                 └─ CallExpression(x)
      └─ ReturnStatement
         └─ expression: NumericLiteral(0)
